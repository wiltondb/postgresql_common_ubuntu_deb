#!/bin/sh

# Run integration tests (on the installed package). This happens on unshared
# tmpfses, so does not interfere with installed clusters.
#
# (C) 2005-2012 Martin Pitt <mpitt@debian.org>
# (C) 2012 Christoph Berg <myon@debian.org>
#
#  This program is free software; you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation; either version 2 of the License, or
#  (at your option) any later version.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.

set -e

# call ourselves through unshare in a way that keeps normal stdin
unshare -uimn sh -- -c "`tail -n +25 $0`" "$0" "$@"
exit $?

# unshared program starts here
set -e

# default config
TESTSDIR="$(dirname $0)/t"
UMASKS="022 077"

help ()
{
    echo "postgresql-common testsuite"
    echo "Syntax: $0 [options] [test ...]"
    echo "    -u 'umask ...'  list of umasks to run testsuite with [default: 022 077]"
    exit ${1:-0}
}

# option parsing
while getopts "hu:" opt ; do
    case $opt in
        h) help ;;
        u) UMASKS="$OPTARG" ;;
        *) help 1 ;;
    esac
done
# shift away args
shift $(($OPTIND - 1))

if [ "$(id -u)" != 0 ]; then
    echo "Error: this test suite needs to be run as root" >&2
    exit 1
fi

# let everything happen in overlay tmpfses to avoid interfering with already
# existing clusters; this also speeds up testing
created_dirs=""
for d in /etc/postgresql /var/lib/postgresql /var/log/postgresql /var/run/postgresql; do
    if ! [ -d $d ]; then
        created_dirs="$created_dirs $d"
        mkdir -p $d
    fi
    mount -n -t tmpfs -o mode=755 tmpfs $d
done
# clean up created directories after us
if [ -n "$created_dirs" ]; then
    trap "umount $created_dirs; rmdir --ignore-fail-on-non-empty -p $created_dirs" 0 HUP INT QUIT ILL ABRT PIPE TERM
fi
chown root:postgres /var/log/postgresql
chmod 1775 /var/log/postgresql
chown postgres:postgres /var/run/postgresql
chmod 2775 /var/run/postgresql

# reset core limit for pg_ctl tests
ulimit -S -c 0

# set variables which cause taint check errors
export IFS=' '
export CDPATH=/usr
export ENV=/nonexisting
export BASH_ENV=/nonexisting

if [ $# -eq 0 ]; then
    set -- $TESTSDIR/*.t
fi

for U in $UMASKS; do
    case $U in
        022) TYPE="default" ;;
        077) TYPE="tight" ;;
        *) TYPE="custom" ;;
    esac

    echo "====== Running all tests with $TYPE umask $U ======="
    umask $U
    for T; do
        echo "=== Running test `basename $T`... ==="
        perl $T
    done
done
