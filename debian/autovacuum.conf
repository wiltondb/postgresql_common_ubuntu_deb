# Autovacuum settings for PostgreSQL versions up to 8.0.
# Version 8.1 or later have integrated autovacuum which is configured
# in postgresql.conf (and enabled by default); this file is irrelevant
# for those versions.
#
# A PostgreSQL database must be vacuumed regularly in order to clear away
# deleted rows and update table statistics (which are used by the planner
# to select the fastest possible query plans).
# 
# To use autovacuuming, you must have the postgresql-contrib-X.Y package
# installed.
#
# Autovacuuming requires the following options in postgresql.conf:
#  stats_start_collector = true
#  stats_row_level = true
#
# If autovacuuming is running, the do.maintenance script, which is run from
# cron, will not do vacuuming unless it is given the -F (force) option.
#

# start pg_autovacuum? (yes/no, default: yes)
start=yes

# Autovacuum options
# Debug level
#   0 silent, 1 basic info, 2 more debug info,  etc...
# avac_debug=1

# Autovacuum sleep
#  The daemon sleeps between database checks so as not to impose an
#  excessive load on the system.  The length of each sleep is
#  avac_sleep_base + (avac_sleep_scale * length of previous loop)
# Sleep base
#  The base number of seconds to sleep between database scans
# avac_sleep_base=300
# Sleep scaling factor
# avac_sleep_scale=2

# Vacuum threshold
#  The daemon does a vacuum for any table if
#        the number of (deletes + updates) > VacuumThreshold
#  where VacuumThreshold = avac_vac_base + (avac_vac_scale * row count)
# Vacuum base threshold
# avac_vac_base=1000
# Vacuum scaling factor
# avac_vac_scale=2

# Analyse threshold
#  Since analysing is much cheaper than vacuuming, the default values are
#  half those for vacuuming.  The daemon does an analyse for any table if
#        the number of (inserts + deletes + updates) > AnalyseThreshold
#  where AnalyseThreshold = avac_anal_base + (avac_anal_scale * row count)
# Analyse base threshold
# avac_anal_base=500

# Analyse scaling factor
# avac_anal_scale=1
